import tkinter as tk
from tkinter import messagebox, Toplevel, ttk
import sqlite3

# Membuat/membuka database dan tabel histori_pembayaran
conn = sqlite3.connect("pembayaran.db")
cursor = conn.cursor()
cursor.execute("""
    CREATE TABLE IF NOT EXISTS histori_pembayaran (
        id INTEGER PRIMARY KEY AUTOINCREMENT,
        nim TEXT,
        bank TEXT,
        invoice TEXT,
        total REAL
    )
""")
conn.commit()

def submit_form():
    nim = nim_entry.get()
    password = password_entry.get()
    selected_bank = bank_var.get()
    invoice_number = invoice_entry.get()
    total_payment = total_entry.get()
    
    # Validasi input
    if not nim or not password or not invoice_number or not selected_bank or not total_payment:
        messagebox.showwarning("Peringatan", "Silakan isi semua kolom!")
        return
    
    try:
        total_float = float(total_payment.replace(',', '').replace('.', ''))
    except ValueError:
        messagebox.showwarning("Peringatan", "Total pembayaran harus berupa angka.")
        return

    # Simpan data ke database
    cursor.execute("""
        INSERT INTO histori_pembayaran (nim, bank, invoice, total)
        VALUES (?, ?, ?, ?)
    """, (nim, selected_bank, invoice_number, total_float))
    conn.commit()

    # Tampilkan informasi inputan dalam pop-up
    info = (
        f"Formulir Pembayaran Berhasil!\n\n"
        f"NIM: {nim}\n"
        f"Bank: {selected_bank}\n"
        f"No. Invoice: {invoice_number}\n"
        f"Total Pembayaran: Rp. {total_payment}"
    )
    messagebox.showinfo("Sukses", info)

    # Kosongkan form
    nim_entry.delete(0, tk.END)
    password_entry.delete(0, tk.END)
    invoice_entry.delete(0, tk.END)
    total_entry.delete(0, tk.END)

def show_histori():
    histori_window = Toplevel(root)
    histori_window.title("Histori Pembayaran UKT")
    histori_window.geometry("500x300")
    histori_window.configure(bg='white')

    # Tabel untuk menampilkan histori
    tree = ttk.Treeview(histori_window, columns=("NIM", "Bank", "Invoice", "Total"), show="headings")
    tree.heading("NIM", text="NIM")
    tree.heading("Bank", text="Bank")
    tree.heading("Invoice", text="No. Invoice")
    tree.heading("Total", text="Total Pembayaran")
    tree.pack(expand=True, fill='both', padx=10, pady=10)

    # Ambil data dari database dan tampilkan
    cursor.execute("SELECT nim, bank, invoice, total FROM histori_pembayaran")
    rows = cursor.fetchall()
    for row in rows:
        tree.insert("", "end", values=(row[0], row[1], row[2], f"Rp {row[3]:,.0f}"))

# Buat jendela utama
root = tk.Tk()
root.title("Form Pembayaran UKT")
root.geometry("400x380")
root.configure(bg='lightgrey')

# Label dan input
tk.Label(root, text="NIM", bg='lightgrey').grid(row=0, column=0, padx=10, pady=10)
nim_entry = tk.Entry(root)
nim_entry.grid(row=0, column=1)

tk.Label(root, text="Password", bg='lightgrey').grid(row=1, column=0, padx=10, pady=10)
password_entry = tk.Entry(root, show='*')
password_entry.grid(row=1, column=1)

tk.Label(root, text="Pilih Bank", bg='lightgrey').grid(row=2, column=0, padx=10, pady=10)
bank_var = tk.StringVar(value="Bank Aceh")
tk.Radiobutton(root, text="Bank Aceh", variable=bank_var, value="Bank Aceh", bg='lightgrey').grid(row=2, column=1, sticky='w')
tk.Radiobutton(root, text="BSI", variable=bank_var, value="BSI", bg='lightgrey').grid(row=2, column=1, sticky='e')

tk.Label(root, text="No. Invoice Bank", bg='lightgrey').grid(row=3, column=0, padx=10, pady=10)
invoice_entry = tk.Entry(root)
invoice_entry.grid(row=3, column=1)

tk.Label(root, text="Total Pembayaran (Rp)", bg='lightgrey').grid(row=4, column=0, padx=10, pady=10)
total_entry = tk.Entry(root)
total_entry.grid(row=4, column=1)

# Tombol submit
submit_button = tk.Button(root, text="Bayar", command=submit_form)
submit_button.grid(row=5, column=0, columnspan=2, pady=10)

# Tombol tampilkan histori
histori_button = tk.Button(root, text="Lihat Histori Pembayaran", command=show_histori)
histori_button.grid(row=6, column=0, columnspan=2, pady=5)

root.mainloop()

# Tutup koneksi database saat aplikasi ditutup
conn.close()
